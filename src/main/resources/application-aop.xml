<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop.xsd">


    <bean id="annotationAdvice" class="com.ownerkaka.testjdk.spring.aop.advice.annotation.AnnotationAdvice"/>
    <bean id="human" class="com.ownerkaka.testjdk.support.bean.Human"/>
    <bean id="bar" class="com.ownerkaka.testjdk.support.bean.Bar">
        <lookup-method name="getHuman" bean="human"/>
        <!--<aop:scoped-proxy proxy-target-class="false"/>-->
    </bean>
    <bean id="ticketServiceBeforeAdvice" class="com.ownerkaka.testjdk.spring.aop.advice.TicketServiceBeforeAdvice"/>
    <bean class="com.ownerkaka.testjdk.spring.ioc.processor.BeanFactoryPostProcessorTest"/>

    <aop:config proxy-target-class="true" expose-proxy="true">
        <aop:pointcut id="p1" expression="execution(public * com.ownerkaka.testjdk.support.bean..*.append(..))"/>
        <aop:pointcut id="p2" expression="execution(public * com.ownerkaka.testjdk..support.bean..*.foo(..))"/>
        <aop:aspect id="aspect1" ref="annotationAdvice">
            <aop:pointcut id="p3" expression="com.ownerkaka.testjdk.spring.aop.advice.annotation.AnnotationAdvice.p1()"/>
            <aop:before method="before"
                        pointcut="execution(public * com.ownerkaka.testjdk.support.bean..*.append(..))"/>
            <aop:after method="after" pointcut-ref="p1"/>
            <aop:around method="around" pointcut-ref="p1"/>
            <aop:after-returning method="afterReturning" pointcut-ref="p1"/>
            <aop:after-throwing method="afterThrowing" pointcut-ref="p2"/>
        </aop:aspect>
        <aop:aspect id="aspect2" ref="annotationAdvice">
            <aop:after method="after" pointcut-ref="p1"/>
        </aop:aspect>
    </aop:config>

    <!--Enables the use of the @AspectJ style of Spring AOP-->
    <!--<aop:aspectj-autoproxy expose-proxy="true" proxy-target-class="true"/>-->

    <aop:config>
        <aop:pointcut id="p3" expression="execution(public * com.ownerkaka.testjdk.support.bean..*.bar(..))"/>
        <aop:advisor advice-ref="ticketServiceBeforeAdvice" pointcut-ref="p3"/>
    </aop:config>
</beans>